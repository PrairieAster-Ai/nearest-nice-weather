name: Performance Monitoring

on:
  push:
    branches: [ main, preview ]
  pull_request:
    branches: [ main, preview ]

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install web dependencies
      run: npm ci --workspace=@nearest-nice-weather/web
    
    - name: Build application for performance testing
      run: npm run build --workspace=@nearest-nice-weather/web
      env:
        NODE_ENV: production
        ANALYZE: true
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v12
      with:
        configPath: './lighthouserc.js'
        uploadArtifacts: true
        temporaryPublicStorage: true
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Bundle Analysis
      uses: github/super-linter/slim@v5
      if: github.event_name == 'pull_request'
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_TYPESCRIPT_ES: true

  bundle-size-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install web dependencies  
      run: npm ci --workspace=@nearest-nice-weather/web
    
    - name: Build with bundle analysis
      run: npm run build --workspace=@nearest-nice-weather/web
      env:
        NODE_ENV: production
        ANALYZE: true
        
    - name: Analyze bundle size
      uses: preactjs/compressed-size-action@v2
      with:
        repo-token: '${{ secrets.GITHUB_TOKEN }}'
        pattern: './apps/web/dist/**/*.{js,css}'
        exclude: '{./apps/web/dist/**/*.map,./apps/web/dist/**/stats.html}'
        minimum-change-threshold: 100
        
    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: |
          apps/web/dist/stats.html
          apps/web/dist/bundle-analysis.json
        retention-days: 30

  performance-budgets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install web dependencies
      run: npm ci --workspace=@nearest-nice-weather/web
    
    - name: Build and check performance budgets
      run: |
        npm run build --workspace=@nearest-nice-weather/web
        node scripts/check-performance-budgets.js
      env:
        NODE_ENV: production
        
    - name: Comment on PR with performance results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = './performance-report.json';
          
          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));
            
            const comment = `## 📊 Performance Report
            
            ### Bundle Size Analysis
            - **Total Size**: ${report.totalSize}
            - **Gzipped Size**: ${report.gzippedSize}
            - **Change**: ${report.sizeChange > 0 ? '+' : ''}${report.sizeChange}%
            
            ### Performance Budgets
            ${report.budgets.map(budget => 
              `- **${budget.name}**: ${budget.status === 'pass' ? '✅' : '❌'} ${budget.actual} (limit: ${budget.limit})`
            ).join('\n')}
            
            ### Recommendations
            ${report.recommendations.map(rec => `- ${rec}`).join('\n')}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  vercel-performance-integration:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/preview' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy with Vercel Speed Insights
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: './apps/web'
      env:
        NEXT_PUBLIC_VERCEL_ANALYTICS_ID: ${{ secrets.VERCEL_ANALYTICS_ID }}
        NEXT_PUBLIC_VERCEL_SPEED_INSIGHTS_ID: ${{ secrets.VERCEL_SPEED_INSIGHTS_ID }}